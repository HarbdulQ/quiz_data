[{"question":"Why are natural languages not used in programming?","answers":["They are complex, irregular, ambiguous, have limited means of abstraction and uneconomic.","They have too many words with different meanings.","They take up too much space to express complex ideas.","They are difficult for humans to understand."],"correct_answer_indices":[0],"correct_answers":["They are complex, irregular, ambiguous, have limited means of abstraction and uneconomic."]},{"question":"Which of the following categories of programming languages provides extra tools to solve the problems that larger programs were creating?","answers":["Object-Oriented Programming Language","Structured Programming Language","Procedural Programming Language","Assembly Language"],"correct_answer_indices":[1],"correct_answers":["Structured Programming Language"]},{"question":"Which of the following programming languages is machine-readable and is made up of binary-coded instructions?","answers":["High Level Language","Procedural Programming Language","Machine Language","Assembly Language"],"correct_answer_indices":[2],"correct_answers":["Machine Language"]},{"question":"What is the purpose of an assembler?","answers":["To translate program written in machine language to a high-level language.","To translate program written in assembly language to its machine language equivalent.","To translate program written in a high-level language to assembly language.","To translate program written in a high-level language to a machine-level language."],"correct_answer_indices":[1],"correct_answers":["To translate program written in assembly language to its machine language equivalent."]},{"question":"What are the principles of a good programming language?","answers":["Efficiency, Reliability, Robustness, Usability, Maintainability, Readability, Accuracy","Reliability, Robustness, Maintainability, Accuracy","Complexity, Ambiguity, Uneconomic","Efficiency, Usability, Readability, Accuracy"],"correct_answer_indices":[0],"correct_answers":["Efficiency, Reliability, Robustness, Usability, Maintainability, Readability, Accuracy"]},{"question":"Which level of debugging involves removing logical and clerical errors?","answers":["Desk checking or Dry running","Execution tracing","Syntax checking","Error message list"],"correct_answer_indices":[0],"correct_answers":["Desk checking or Dry running"]},{"question":"What are the classes of programming errors?","answers":["Compile Errors, Bugs, Critical Errors","Input Errors, Output Errors, Runtime Errors","Runtime Errors, Semantic Errors, Syntactical Errors","Human Errors, Syntax Errors, Logic Errors, Execution Errors"],"correct_answer_indices":[3],"correct_answers":["Human Errors, Syntax Errors, Logic Errors, Execution Errors"]},{"question":"What is the purpose of desk checking or dry running?","answers":["To compile the program and generate an object code file.","To debug a program by showing a list of errors.","To execute a program and trace the values of variables at runtime.","To locate and remove logical and clerical errors as much as possible."],"correct_answer_indices":[3],"correct_answers":["To locate and remove logical and clerical errors as much as possible."]},{"question":"Which stages are involved in programming?","answers":["Problem definition, Devising the method, Coding the instruction, Compilation, Documenting, Maintenance","Collecting the data, Analyzing the data, Visualizing the data, Communicating the insights.","Identifying the requirements, Approximating the solution, Prototyping the design, Evaluating the results.","Designing the interface, Developing the algorithm, Implementing the database, Testing the system."],"correct_answer_indices":[0],"correct_answers":["Problem definition, Devising the method, Coding the instruction, Compilation, Documenting, Maintenance"]},{"question":"Which task requires applying appropriate programming language towards solving a particular problem?","answers":["Maintenance and effecting the changes to make the program work.","Devising the method using suitable aids","Documenting all the work involved in producing the program","Coding the instruction in a programming language"],"correct_answer_indices":[3],"correct_answers":["Coding the instruction in a programming language"]},{"question":"Which programming language category allows a section of code to be re-used without making multiple copies?","answers":["Assembly Language","Procedural Programming Language","Object-Oriented Programming Language","Structured Programming Language"],"correct_answer_indices":[1],"correct_answers":["Procedural Programming Language"]},{"question":"Which programming language category frowns upon the use of global variables?","answers":["High Level Language","Procedural Programming Language","Structured Programming Language","Object-Oriented Programming Language"],"correct_answer_indices":[2],"correct_answers":["Structured Programming Language"]},{"question":"Which type of programming language uses mnemonics or symbols to represent machine language instructions?","answers":["Assembly Language","High Level Language","Procedural Programming Language","Machine Language"],"correct_answer_indices":[0],"correct_answers":["Assembly Language"]},{"question":"What is the difference between a compiler and an interpreter?","answers":["A compiler translates assembly language into machine code, while an interpreter converts high-level language into assembly language.","A compiler converts machine language into assembly language, while an interpreter translates machine language into assembly language.","A compiler translates high-level language into assembly language, while an interpreter converts assembly language into machine code.","A compiler translates a high-level language into machine code before executing it, while an interpreter converts and executes the high-level language script line by line."],"correct_answer_indices":[3],"correct_answers":["A compiler translates a high-level language into machine code before executing it, while an interpreter converts and executes the high-level language script line by line."]},{"question":"What are the limitations of natural languages?","answers":["Inefficiency, Rigidity, Excessive means of abstraction, Ambiguity","Lack of rules, Regularities, Inflexibility, Expensive","Complexity, Ambiguity, Limited means of abstraction, Uneconomic","Unpredictability, Regularities, Overabstraction, Ambiguity"],"correct_answer_indices":[2],"correct_answers":["Complexity, Ambiguity, Limited means of abstraction, Uneconomic"]},{"question":"What is the purpose of an assembler?","answers":["To translate program written in assembly language to its machine language equivalent.","To execute a program written in a high-level language to convert it into assembly language.","To compile a program written in a high-level language to machine code.","To interpret a program written in a high-level language to check for syntax errors."],"correct_answer_indices":[0],"correct_answers":["To translate program written in assembly language to its machine language equivalent."]},{"question":"Which programming language category incorporates the best of structured programming features with new concepts?","answers":["High Level Language","Procedural Programming Language","Object-Oriented Programming Language","Structured Programming Language"],"correct_answer_indices":[2],"correct_answers":["Object-Oriented Programming Language"]},{"question":"What is the purpose of maintaining a program?","answers":["To document all the work involved in producing the program.","To effect the changes that may arise to make the program work for required time.","To allocate resources and optimize their usage in a program.","To dry run the program and locate logical and clerical errors."],"correct_answer_indices":[1],"correct_answers":["To effect the changes that may arise to make the program work for required time."]},{"question":"What is the purpose of documenting a program?","answers":["To provide information on how the program works and how to use it.","To remove logical and clerical errors as much as possible.","To translate the programming instructions into the computer's machine language.","To locate the cause of an error and make necessary corrections."],"correct_answer_indices":[0],"correct_answers":["To provide information on how the program works and how to use it."]},{"question":"Which stage of programming involves understating what it takes to solve a particular problem?","answers":["Devising the method","Problem definition","Coding the instruction","Compilation"],"correct_answer_indices":[1],"correct_answers":["Problem definition"]},{"question":"What are the classes of programming errors?","answers":["Input Errors, Output Errors, Syntax Errors, Semantics Errors","Language Errors, Debugging Errors, Execution Errors","Human Errors, Syntax Errors, Logic Errors, Execution Errors","Design Errors, Runtime Errors, Low-level Errors"],"correct_answer_indices":[2],"correct_answers":["Human Errors, Syntax Errors, Logic Errors, Execution Errors"]},{"question":"What is the purpose of desk checking or dry running?","answers":["To compile the program and generate an executable file.","To debug a program by executing it and tracing the values of variables at runtime.","To manipulate data and produce results.","To locate and remove logical and clerical errors as much as possible."],"correct_answer_indices":[3],"correct_answers":["To locate and remove logical and clerical errors as much as possible."]},{"question":"What are the principles of a good programming language?","answers":["Reliability, Robustness, Maintainability, Accuracy","Complexity, Ambiguity, Uneconomic","Efficiency, Reliability, Robustness, Usability, Maintainability, Readability, Accuracy","Efficiency, Usability, Readability, Accuracy"],"correct_answer_indices":[2],"correct_answers":["Efficiency, Reliability, Robustness, Usability, Maintainability, Readability, Accuracy"]},{"question":"What is the difference between a compiler and an interpreter?","answers":["A compiler translates a high-level language into machine code before executing it, while an interpreter converts and executes the high-level language script line by line.","A compiler converts machine language into assembly language, while an interpreter translates machine language into assembly language.","A compiler translates high-level language into assembly language, while an interpreter converts assembly language into machine code.","A compiler translates assembly language into machine code, while an interpreter converts high-level language into assembly language."],"correct_answer_indices":[0],"correct_answers":["A compiler translates a high-level language into machine code before executing it, while an interpreter converts and executes the high-level language script line by line."]},{"question":"What are the limitations of natural languages?","answers":["Complexity, Ambiguity, Limited means of abstraction, Uneconomic","Unpredictability, Regularities, Overabstraction, Ambiguity","Lack of rules, Regularities, Inflexibility, Expensive","Inefficiency, Rigidity, Excessive means of abstraction, Ambiguity"],"correct_answer_indices":[0],"correct_answers":["Complexity, Ambiguity, Limited means of abstraction, Uneconomic"]},{"question":"What is the purpose of an assembler?","answers":["To compile a program written in a high-level language to machine code.","To translate program written in assembly language to its machine language equivalent.","To interpret a program written in a high-level language to check for syntax errors.","To execute a program written in a high-level language to convert it into assembly language."],"correct_answer_indices":[1],"correct_answers":["To translate program written in assembly language to its machine language equivalent."]},{"question":"Which programming language category incorporates the best of structured programming features with new concepts?","answers":["Structured Programming Language","Procedural Programming Language","Object-Oriented Programming Language","High Level Language"],"correct_answer_indices":[2],"correct_answers":["Object-Oriented Programming Language"]},{"question":"What is the purpose of maintaining a program?","answers":["To dry run the program and locate logical and clerical errors.","To allocate resources and optimize their usage in a program.","To effect the changes that may arise to make the program work for required time.","To document all the work involved in producing the program."],"correct_answer_indices":[2],"correct_answers":["To effect the changes that may arise to make the program work for required time."]},{"question":"What is the purpose of documenting a program?","answers":["To locate the cause of an error and make necessary corrections.","To remove logical and clerical errors as much as possible.","To provide information on how the program works and how to use it.","To translate the programming instructions into the computer's machine language."],"correct_answer_indices":[2],"correct_answers":["To provide information on how the program works and how to use it."]},{"question":"Which stage of programming involves understating what it takes to solve a particular problem?","answers":["Problem definition","Coding the instruction","Devising the method","Compilation"],"correct_answer_indices":[0],"correct_answers":["Problem definition"]},{"question":"What are the classes of programming errors?","answers":["Language Errors, Debugging Errors, Execution Errors","Input Errors, Output Errors, Syntax Errors, Semantics Errors","Design Errors, Runtime Errors, Low-level Errors","Human Errors, Syntax Errors, Logic Errors, Execution Errors"],"correct_answer_indices":[3],"correct_answers":["Human Errors, Syntax Errors, Logic Errors, Execution Errors"]},{"question":"What is the purpose of desk checking or dry running?","answers":["To compile the program and generate an executable file.","To manipulate data and produce results.","To debug a program by executing it and tracing the values of variables at runtime.","To locate and remove logical and clerical errors as much as possible."],"correct_answer_indices":[3],"correct_answers":["To locate and remove logical and clerical errors as much as possible."]},{"question":"What are the Four levels of Problem Solving?","answers":["Problem Definition, Solution Design, Solution Refinement, Program Code","Defining the problem, Generating a plan, Executing the program, Evaluating the result","Problem Identification, Solution Development, Execution of the Solution, Result Validation","Understanding the problem, Devising a plan, Executing the plan, Evaluating the Solution"],"correct_answer_indices":[3],"correct_answers":["Understanding the problem, Devising a plan, Executing the plan, Evaluating the Solution"]},{"question":"What are the Seven steps involved in Problem Solving?","answers":["Problem Identification, Solution Development, Solution Refinement, Program Coding and Testing, Program Execution, Documentation, Program Maintenance","Problem Definition, Solution Design, Solution Refinement, Testing Strategy Development, Program Coding and Testing, Documentation, Program Maintenance","Understanding the Problem, Designing a Solution, Executing the Plan, Evaluating the Result, Program Test, Documentation, Program Upkeep","Analyzing the Problem, Planning the Solution, Implementing the Solution, Checking the Result, Program Assessment, Documentation, Program Repair"],"correct_answer_indices":[1],"correct_answers":["Problem Definition, Solution Design, Solution Refinement, Testing Strategy Development, Program Coding and Testing, Documentation, Program Maintenance"]},{"question":"What is the meaning of Computable and non-computable problem?","answers":["Computable problems can be solved using a computer system while non-computable problems cannot.","Computable problems are related to computing technology, while non-computable problems are unrelated.","Computable problems can be solved quickly, while non-computable problems require extensive time and resources.","Computable problems require complex mathematical calculations, while non-computable problems do not."],"correct_answer_indices":[0],"correct_answers":["Computable problems can be solved using a computer system while non-computable problems cannot."]},{"question":"What are the steps involved in Program Maintenance?","answers":["Revisiting the original problem, Rewriting the entire program code, Seeking outside consultation, Monitoring program performance","Creating backup servers, Enhancing program security measures, Collaborating with programmers from other organizations, Requesting user feedback","Planning future program updates, Designing a new program from scratch, Training users on program functionalities, Writing additional program tests","Eliminating newly detected program errors, Modifying the current program, Adding new features to the program, Updating the documentation"],"correct_answer_indices":[3],"correct_answers":["Eliminating newly detected program errors, Modifying the current program, Adding new features to the program, Updating the documentation"]},{"question":"Which of the following is NOT a general technique used in problem solving?","answers":["Reshaping the original problem so that it resembles a known problem","Finding existing work that can help in the search for a solution","Finding if there are known similar problems","Restricting the problem to a shorter solvable form"],"correct_answer_indices":[1],"correct_answers":["Finding existing work that can help in the search for a solution"]},{"question":"What is the purpose of Solution Refinement in problem solving?","answers":["To execute the plan of action to solve the problem","To break down the problem into smaller sub-problems","To identify the existing work that can help in finding a solution","To develop a detailed algorithm or step-by-step guide to solving the problem"],"correct_answer_indices":[3],"correct_answers":["To develop a detailed algorithm or step-by-step guide to solving the problem"]},{"question":"Which level of problem solving involves defining a detailed problem statement and understanding the required input and output information?","answers":["Evaluating the Solution","Devising a plan","Executing the plan","Understanding the problem"],"correct_answer_indices":[3],"correct_answers":["Understanding the problem"]},{"question":"What is the purpose of Testing Strategy Development in problem solving?","answers":["To divide the problem into smaller sub-problems for easier solving","To revise and improve the initial plan of action","To test the algorithm or program using a set of specific test cases with known expected results","To identify external work that can assist in solving the problem"],"correct_answer_indices":[2],"correct_answers":["To test the algorithm or program using a set of specific test cases with known expected results"]},{"question":"In Program Coding and Testing, what step is performed after writing the pseudo-code?","answers":["Running the pseudo-code directly on the computer","Analyzing the efficiency of the pseudo-code solution","Converting the pseudo-code into a programming language","Designing a flowchart based on the pseudo-code"],"correct_answer_indices":[2],"correct_answers":["Converting the pseudo-code into a programming language"]},{"question":"What should be included in the documentation of a program?","answers":["Technical specifications, user instructions, and a user feedback form","Explanations of all steps, design decisions, encountered problems, and a printed copy of the program","Examples of program inputs and outputs, sample test cases, and a troubleshooting guide","Detailed code explanations, suggestions for future improvements, and developer contact information"],"correct_answer_indices":[1],"correct_answers":["Explanations of all steps, design decisions, encountered problems, and a printed copy of the program"]},{"question":"What does Program Maintenance include?","answers":["Optimizing program performance, improving program security measures, upgrading hardware infrastructure","Planning future program development, replacing outdated hardware, conducting user training sessions","Eliminating newly detected program errors, modifying the current program, adding new features to the program","Rewriting the entire program code, migrating to a different programming language, redesigning the user interface"],"correct_answer_indices":[2],"correct_answers":["Eliminating newly detected program errors, modifying the current program, adding new features to the program"]},{"question":"What is the main purpose of Program Maintenance?","answers":["To fix errors and issues in the program code","To add new features and functionality to the program","To ensure that the program remains functional, up-to-date, and meets changing requirements","To develop a long-term optimization strategy for the program"],"correct_answer_indices":[2],"correct_answers":["To ensure that the program remains functional, up-to-date, and meets changing requirements"]},{"question":"Which technique involves finding similar problems that have already been solved?","answers":["Restricting the problem to a solvable form","Finding if there are known similar problems","Reshaping the original problem","Generalizing a restricted problem"],"correct_answer_indices":[1],"correct_answers":["Finding if there are known similar problems"]},{"question":"What is the first step in Problem Solving?","answers":["Testing Strategy Development","Problem Definition","Solution Refinement","Solution Design"],"correct_answer_indices":[1],"correct_answers":["Problem Definition"]},{"question":"What does Solution Design involve?","answers":["Executing the identified plan of action","Representing the problem solution in a flowchart","Dividing the problem into smaller sub-problems","Refining the solution steps into a detailed algorithm"],"correct_answer_indices":[2],"correct_answers":["Dividing the problem into smaller sub-problems"]},{"question":"What is the purpose of Solution Refinement?","answers":["To break down the problem into smaller sub-problems","To develop a detailed algorithm or step-by-step guide to solving the problem","To identify the existing work that can help in finding a solution","To execute the plan of action to solve the problem"],"correct_answer_indices":[1],"correct_answers":["To develop a detailed algorithm or step-by-step guide to solving the problem"]},{"question":"What is the purpose of Test Strategy Development?","answers":["To search for existing work that can assist in solving the problem","To divide the problem into smaller sub-problems for easier solving","To define a set of specific test cases to ensure the correctness of the program","To evaluate the validity of the solution and its effectiveness"],"correct_answer_indices":[2],"correct_answers":["To define a set of specific test cases to ensure the correctness of the program"]},{"question":"What is the final step in solving a problem?","answers":["Executing the plan","Understanding the problem","Evaluate the Solution","Devising a plan"],"correct_answer_indices":[2],"correct_answers":["Evaluate the Solution"]},{"question":"What is the purpose of Program Coding and Testing?","answers":["To translate the pseudo-code into a programming language and verify the program's correctness","To design a flowchart for implementing the solution","To identify the necessary hardware and software for executing the program","To analyze the efficiency and performance of the solution"],"correct_answer_indices":[0],"correct_answers":["To translate the pseudo-code into a programming language and verify the program's correctness"]},{"question":"What should be included in Program Documentation?","answers":["Detailed code explanations, suggestions for future improvements, and contact information for users","Technical specifications, user instructions, and a feedback form","Examples of program inputs and outputs, sample test cases, and a troubleshooting guide","Explanations of all the steps, design decisions, encountered problems, and a printed copy of the program"],"correct_answer_indices":[3],"correct_answers":["Explanations of all the steps, design decisions, encountered problems, and a printed copy of the program"]},{"question":"What is involved in Program Maintenance?","answers":["Eliminating program errors, modifying the program, adding new features, and updating documentation","Rewriting the entire program code, migrating to a new programming language, and redesigning the user interface","Planning future program development, replacing outdated hardware, and retraining users","Optimizing program performance, improving program security measures, and upgrading hardware infrastructure"],"correct_answer_indices":[0],"correct_answers":["Eliminating program errors, modifying the program, adding new features, and updating documentation"]},{"question":"What is the purpose of Maintenance Documentation?","answers":["To explain the initial design and development decisions of the program","To provide user instructions and guidelines for program usage","To assist maintainers in modifying, troubleshooting, and improving the program","To track program bugs and issues for future debugging"],"correct_answer_indices":[2],"correct_answers":["To assist maintainers in modifying, troubleshooting, and improving the program"]},{"question":"What are the general techniques used in solving a Problem?","answers":["Analyzing the problem, Determining fundamental requirements, Expressing the solution in specific technology","Dividing the problem into sub-problems, Designing an algorithm, Implementing the solution","Identifying the problem domain, Conducting research, Validating the solution","Finding if there are known similar problems, Reshaping the original problem, Restricting the problem to a shorter solvable form"],"correct_answer_indices":[3],"correct_answers":["Finding if there are known similar problems, Reshaping the original problem, Restricting the problem to a shorter solvable form"]},{"question":"What is the major difference between pseudo-code and flowchart?","answers":["Pseudo-code is a textual representation while flowchart is a graphical representation","Pseudo-code is used in programming while flowchart is used in algorithm design","Pseudo-code is machine-readable while flowchart is human-readable","Pseudo-code shows detailed steps while flowchart shows decision points"],"correct_answer_indices":[0],"correct_answers":["Pseudo-code is a textual representation while flowchart is a graphical representation"]},{"question":"What is the main purpose of Solution Design in problem solving?","answers":["To refine the initial solution into a more efficient and effective approach","To define a detailed algorithm or plan of steps to solve the problem","To evaluate the correctness and validity of the final solution","To break down the original problem into smaller, more manageable sub-problems"],"correct_answer_indices":[3],"correct_answers":["To break down the original problem into smaller, more manageable sub-problems"]},{"question":"What does Testing Strategy Development involve?","answers":["Finding related research and work that can assist in solving the problem","Implementing the solution and verifying its correctness and efficiency","Defining specific test cases with known expected results to validate the correctness of the program","Dividing the problem into smaller sub-problems and creating a step-by-step plan"],"correct_answer_indices":[2],"correct_answers":["Defining specific test cases with known expected results to validate the correctness of the program"]},{"question":"What is the purpose of Program Coding and Testing in problem solving?","answers":["To design a flowchart representing the high-level logic of the program","To translate the solution refinement's pseudo-code into a programming language and ensure the program's correctness","To analyze the efficiency and effectiveness of the solution approach","To identify and select the most appropriate programming language for implementing the solution"],"correct_answer_indices":[1],"correct_answers":["To translate the solution refinement's pseudo-code into a programming language and ensure the program's correctness"]},{"question":"What is an algorithm?","answers":["A detailed step by step instruction towards solving a computable problem.","A diagrammatic representation of a problem.","A mathematical equation used to solve a problem.","A programming language used to write code."],"correct_answer_indices":[0],"correct_answers":["A detailed step by step instruction towards solving a computable problem."]},{"question":"What are the various ways of representing an algorithm?","answers":["Verbal representation, symbolic representation, graphical representation.","Textual representation, equation representation, diagrammatic representation.","Verbal representation, algebraic representation, tabular representation, hierarchical representation, data-flow diagram, flowchart, flowblocks.","Written representation, pictorial representation, numerical representation."],"correct_answer_indices":[2],"correct_answers":["Verbal representation, algebraic representation, tabular representation, hierarchical representation, data-flow diagram, flowchart, flowblocks."]},{"question":"What are the properties of an algorithm?","answers":["Terminating, finite, communicative, flexible.","Completeness, unambiguous, deterministic, finite.","Complex, ambiguous, random, indefinite.","Deterministic, infinite, specific, dynamic."],"correct_answer_indices":[1],"correct_answers":["Completeness, unambiguous, deterministic, finite."]},{"question":"What are the desirable attributes of an algorithm?","answers":["Usability, generality, efficiency, good structure, robustness, cost-effectiveness.","Security, flexibility, maintainability, optimization.","Accuracy, reliability, scalability, optimization.","Stability, scalability, maintainability, flexibility."],"correct_answer_indices":[0],"correct_answers":["Usability, generality, efficiency, good structure, robustness, cost-effectiveness."]},{"question":"What is a pseudocode?","answers":["Nonstandard English like instructions needed to solve a problem.","A diagrammatic representation of a problem.","A standard programming language used for coding.","A mathematical equation used to solve a problem."],"correct_answer_indices":[0],"correct_answers":["Nonstandard English like instructions needed to solve a problem."]},{"question":"What are the features of a good pseudocode?","answers":["Must begin with the Start instruction and end with the End instruction, each statement should contain at least one instruction, should contain a verb for action and identifiers/operators for calculations.","Must have lowercase letters, should end with an exclamation mark, should always contain one instruction per line without any calculations.","Must start with a number, should end with a punctuation mark, should contain at least three levels of indentation.","Must begin with the End instruction and end with the Start instruction, each statement should contain only one instruction, should always contain a noun without any action or calculations."],"correct_answer_indices":[0],"correct_answers":["Must begin with the Start instruction and end with the End instruction, each statement should contain at least one instruction, should contain a verb for action and identifiers/operators for calculations."]},{"question":"What are the advantages of using a pseudocode?","answers":["Structured programming language, supports object-oriented programming, high performance execution.","Suitable for complex problems, supports parallel processing, better error handling.","Efficient execution, low memory consumption, high scalability.","Simple and unstructured programming language, easy to translate into any formal programming language, easy to read and understand."],"correct_answer_indices":[3],"correct_answers":["Simple and unstructured programming language, easy to translate into any formal programming language, easy to read and understand."]},{"question":"What are the disadvantages of using a pseudocode?","answers":["Limited expressiveness, poor error handling, low performance.","Difficult to translate, poor documentation, excessive complexity.","Lack of standards, difficult to standardize, lack of rules.","Lack of readability, excessive lines of code, lack of scalability."],"correct_answer_indices":[2],"correct_answers":["Lack of standards, difficult to standardize, lack of rules."]},{"question":"What is a flowchart?","answers":["A graphic, diagrammatic or pictorial representation of the sequence of steps needed to solve a computable problem.","A mathematical algorithm used to calculate problem solutions.","A user interface design tool for software applications.","A written representation of steps to solve a problem."],"correct_answer_indices":[0],"correct_answers":["A graphic, diagrammatic or pictorial representation of the sequence of steps needed to solve a computable problem."]},{"question":"What symbol is used to show the start and finish of a flowchart?","answers":["Rounded Rectangle.","Circle.","Rectangle.","Diamond."],"correct_answer_indices":[0],"correct_answers":["Rounded Rectangle."]},{"question":"What symbol is used to represent a decision in a flowchart?","answers":["Rectangle.","Diamond.","Parallelogram.","Circle."],"correct_answer_indices":[1],"correct_answers":["Diamond."]},{"question":"What symbol is used to represent a logic input or output in a flowchart?","answers":["Rectangle.","Diamond.","Parallelogram.","Circle."],"correct_answer_indices":[2],"correct_answers":["Parallelogram."]},{"question":"What rule should be followed when connecting flowchart symbols?","answers":["Lines should cross each other multiple times.","Lines must never cross each other.","Lines should intersect at specific points.","Lines can cross but should not intersect."],"correct_answer_indices":[1],"correct_answers":["Lines must never cross each other."]},{"question":"What does a circle symbol with a number inside represent in a flowchart?","answers":["Input/Output symbol for reading from or writing to external sources.","Process symbol for a single step in the logic.","Connector symbol to connect flowchart drawings across multiple pages.","Decision symbol for a condition evaluation."],"correct_answer_indices":[2],"correct_answers":["Connector symbol to connect flowchart drawings across multiple pages."]},{"question":"What is one advantage of using a flowchart?","answers":["Proper documentation of a program.","Proper debugging of a program.","Effective analysis of a problem.","Efficient coding of a program."],"correct_answer_indices":[2],"correct_answers":["Effective analysis of a problem."]},{"question":"What is one disadvantage of using a flowchart?","answers":["Complex logic can make the flowchart clumsy.","Flowchart requires complete re-drawing for alterations.","Flowchart details can be lost in technical reproduction.","Flowchart symbols cannot be easily typed."],"correct_answer_indices":[0],"correct_answers":["Complex logic can make the flowchart clumsy."]},{"question":"What must an algorithm have to be considered complete?","answers":["It must have a complex decision structure.","It must fully contain all the steps that lead to solving a computable problem.","It must have a formal programming language translation.","It must have an unlimited number of steps."],"correct_answer_indices":[1],"correct_answers":["It must fully contain all the steps that lead to solving a computable problem."]},{"question":"What does it mean for an algorithm to be unambiguous?","answers":["It must have only one interpretation.","It can have multiple interpretations.","It must be written in a specific programming language.","It must have at least three interpretations."],"correct_answer_indices":[0],"correct_answers":["It must have only one interpretation."]},{"question":"What does it mean for an algorithm to be deterministic?","answers":["The solution to the problem or task is achieved after following the detailed steps.","There is no specific solution to the problem or task.","The steps of the algorithm are random and unpredictable.","The solution to the problem or task is achieved without following the detailed steps."],"correct_answer_indices":[0],"correct_answers":["The solution to the problem or task is achieved after following the detailed steps."]},{"question":"What does it mean for an algorithm to be finite?","answers":["A good algorithm must terminate after a sequential number of steps using a finite number of variables.","A good algorithm must terminate without using any variables.","A good algorithm must terminate after an infinite number of steps using finite number of variables.","A good algorithm must terminate after a sequential number of steps using an infinite number of variables."],"correct_answer_indices":[0],"correct_answers":["A good algorithm must terminate after a sequential number of steps using a finite number of variables."]},{"question":"What are the desirable attributes of an algorithm?","answers":["Security, scalability, maintainability, simplicity, performance, affordability.","Complexity, specificity, creativity, flexibility, portability, affordability.","Usability, generality, efficiency, good structure, robustness, cost-effectiveness.","Reliability, stability, scalability, efficiency, innovation, affordability."],"correct_answer_indices":[2],"correct_answers":["Usability, generality, efficiency, good structure, robustness, cost-effectiveness."]},{"question":"What do Pseudocode and Flowchart represent?","answers":["User interface designs for software applications.","Data structures and algorithms used in programming.","Steps involved in solving problems or algorithms.","Logical operators and mathematical equations."],"correct_answer_indices":[2],"correct_answers":["Steps involved in solving problems or algorithms."]},{"question":"What are the similarities between Pseudocode and Flowchart?","answers":["Both represent graphical designs for user interfaces.","Both represent mathematical equations.","Both represent data structures used in programming.","Both represent steps involved in solving problems or algorithms."],"correct_answer_indices":[3],"correct_answers":["Both represent steps involved in solving problems or algorithms."]},{"question":"What are the differences between Pseudocode and Flowchart?","answers":["Pseudocode represents simple problems, while Flowchart represents complex problems.","Pseudocode relies on graph theory, while Flowchart relies on formal logic.","Pseudocode uses nonstandard English-like instructions, while Flowchart uses standardized symbols for representation.","Pseudocode uses standardized symbols, while Flowchart uses nonstandard English-like instructions."],"correct_answer_indices":[2],"correct_answers":["Pseudocode uses nonstandard English-like instructions, while Flowchart uses standardized symbols for representation."]},{"question":"What must be labeled on every flowchart symbol according to the flowchart rules?","answers":["A specific computer language keyword.","The output value obtained from that step.","The time complexity analysis of that step.","A short explanation giving more information about that step."],"correct_answer_indices":[3],"correct_answers":["A short explanation giving more information about that step."]},{"question":"What is one disadvantage of a flowchart?","answers":["Flowchart requires complete re-drawing for alterations.","Flowchart lacks standards and is difficult to standardize.","Reproduction becomes a problem due to the inability to type flowchart symbols.","Flowchart involves excessive lines of code and excessive complexity."],"correct_answer_indices":[2],"correct_answers":["Reproduction becomes a problem due to the inability to type flowchart symbols."]},{"question":"What must a good pseudocode statement contain?","answers":["At least one instruction, a verb for action and identifiers/operators for calculations.","At least three instructions, a specific noun for identification, and constants for calculations.","At least four instructions, a noun for identification, and variables for calculations.","At least two instructions, an adjective for description, and operators for calculations."],"correct_answer_indices":[0],"correct_answers":["At least one instruction, a verb for action and identifiers/operators for calculations."]}]